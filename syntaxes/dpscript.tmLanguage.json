{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.dpscript",
	"fileTypes": [
		"dps"
	],
	"patterns": [{"include": "#any"}],
	"foldingStartMarker": "\\{",
	"foldingStopMarker": "}",
	"repository": {
		"any": {
			"patterns": [
				{"include": "#keyword"},
				{"include": "#selector"},
				{"include": "#var_type"},
				{"include": "#selector_member"},
				{"include": "#expression"},
				{"include": "#nbt"},
				{"include": "#raw_command"}
			]
		},
		"keyword": {
			"match": "\\b(tick|load|if|as|at|for|offset|summon|new|switch|case|print|function|else|while|block|this|class|abstract|extends|prop)\\b",
			"name": "keyword"
		},
		"var_type":{
			"match": "\\b(const|objective|global|int|string|boolean|selector|bossbar|double)\\b",
			"name": "entity.name.type"
		},
		"selector":{
			"match": "(\\@\\w+|\\bself\\b)(\\[.*])?",
			"captures": {
				"1":{
					"patterns": [{
						"include": "#selector_params"
					}]
				}
			},
			"name":"constant.regexp"
		},
		"selector_params": {
			"begin": "\\[",
			"patterns": [
				{"include": "#expression"},
				{"include": "#selector_param"}
			],
			"end": "]",
			"name":"variable.parameter"
		},
		"selector_param": {
			"match": "\\b(tag|tags|name|distance|limit|level)\\b",
			"name":"storage.modifier"
		},
		"expression": {
			"patterns": [
				{"include": "#string"},
				{"include": "#int"}
			]
		},
		"string": {
			"patterns": [
				{
					"begin": "\"",
					"end": "\"",
					"name":"string"
				},
				{
					"begin": "'",
					"end": "'",
					"name":"string"
				}
			]
		},
		"int": {
			"match": "[1-9]?[0-9]*\\.[0-9]*",
			"name":"constant.numeric"
		},
		"selector_member":{
			"match": "\\.(kill|give|effect|enchant|gamemode|title)",
			"captures": {
				"1":{
					"name":"support.function"
				}
			}
		},
		"nbt": {
			"match": "\\{[^\n]*}",
			"patterns": [{"include": "#nbt_values"}]
		},
		"nbt_values": {
			"patterns": [
				{"include": "#expression"},
				{"include": "#nbt_list"},
				{"include": "#nbt"},
				{
					"match": "-?\\d{1,3}(b|B)",
					"name":"constant.character"
				},
				{
					"match": "-?\\d{1,5}(s|S)",
					"name":"invalid.deprecated"
				},
				{
					"match": "-?\\d+(\\.\\d+)?(d|D)?",
					"name":"keyword.control.less"
				}
			]
		},
		"nbt_list": {
			"begin": "\\[",
			"end": "\\]",
			"name":"variable.parameter",
			"patterns": [{
				"include": "#nbt_values"
			}]
		},
		"raw_command":{
			"begin": "/",
			"end": "(\n|$)",
			"patterns": [{
				"include": "source.mcfunction"
			}]
		}
	}
}