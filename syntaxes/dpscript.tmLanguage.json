{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.dpscript",
	"fileTypes": [
		"dps"
	],
	"patterns": [{"include": "#any"}],
	"foldingStartMarker": "\\{",
	"foldingStopMarker": "}",
	"repository": {
		"any": {
			"patterns": [
				{"include": "#keyword"},
				{"include": "#control_kw"},
				{"include": "#selector"},
				{"include": "#var_type"},
				{"include": "#expression"},
				{"include": "#_nbt"},
				{"include": "#raw_command"}
			]
		},
		"keyword": {
			"match": "\\b(tick|load|summon|new|print|function|block|this|class|abstract|extends|prop|tag|item|entity)\\b",
			"name": "keyword"
		},
		"control_kw": {
			"match": "\\b(if|as|at|for|offset|switch|case|else|while|import)\\b",
			"name": "keyword.control"
		},
		"var_type":{
			"match": "\\b(const|objective|global|int|string|boolean|selector|bossbar|double|team|predicate)\\b",
			"name": "entity.name.type"
		},
		"selector":{
			"match": "(\\@\\w+|self)(\\[.*])?(\\.(\\w+\\s*\\(?))?",
			"captures": {
				"1":{
					"name":"constant.regexp"
				},
				"2":{
					"patterns": [{
						"include": "#selector_params"
					}]
				},
				"4":{
					"patterns": [
						{"include": "#selector_member"}
					]
				}
			}
		},
		"selector_params": {
			"begin": "\\[",
			"patterns": [
				{"include": "#selector_param"}
			],
			"end": "]",
			"name":"variable.parameter"
		},
		"selector_param": {
			"begin": "(\\w+)=?",
			"end": ",|(?=])",
			"beginCaptures": {
				"1":{
					"name":"storage.modifier"
				}
			},
			"contentName":"comment"
		},
		"selector_member":{
			"patterns": [
				{
					"match": "(\\w+)\\s*\\(",
					"captures": {
						"1":{
							"name":"support.function"
						}
					}
				}
			]
		},
		"expression": {
			"patterns": [
				{"include": "#string"},
				{"include": "#int"},
				{"include": "#_nbt"}
			]
		},
		"string": {
			"patterns": [
				{
					"begin": "\"",
					"end": "\"",
					"name":"string"
				},
				{
					"begin": "'",
					"end": "'",
					"name":"string"
				}
			]
		},
		"int": {
			"match": "[1-9]?[0-9]*\\.[0-9]*",
			"name":"constant.numeric"
		},
		"nbt": {
			"begin": "\\{(?=\\w)",
			"end": "}",
			"patterns": [
				{
					"include": "#nbt_key"
				}
			],
			"name":"comment.line"
		},
		"nbt_key":{
			"begin": ",? *([A-Za-z0-9_\\.\\-]+|\\\"[^\\n\\\"]+\\\")( *\\: *)?",
			"end": " *(?=[\\n\\}\\,])",
			"beginCaptures": {
				"1":{
					"name":"variable.name"
				}
			},
			"patterns": [
				{"include": "#nbt_value"}
			]
		},
		"nbt_value":{
			"patterns": [
				{
					"begin": "\\[",
					"end": "]",
					"patterns": [
						{
							"include": "#nbt_value"
						}
					]
				},
				{
					"include": "#int"
				},
				{
					"include": "#string"
				},
				{
					"include": "#nbt"
				}
			]
		},
		"raw_command":{
			"begin": "^\\s*/",
			"end": "(\n|$)",
			"patterns": [{
				"include": "source.mcfunction"
			}]
		}
	}
}